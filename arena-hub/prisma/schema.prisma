generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
  schemas   = ["auth", "public"]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model audit_log_entries {
  instance_id String?   @db.Uuid
  id          String    @id @db.Uuid
  payload     Json?     @db.Json
  created_at  DateTime? @db.Timestamptz(6)
  ip_address  String    @default("") @db.VarChar(64)

  @@index([instance_id], map: "audit_logs_instance_id_idx")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model flow_state {
  id                     String                @id @db.Uuid
  user_id                String?               @db.Uuid
  auth_code              String
  code_challenge_method  code_challenge_method
  code_challenge         String
  provider_type          String
  provider_access_token  String?
  provider_refresh_token String?
  created_at             DateTime?             @db.Timestamptz(6)
  updated_at             DateTime?             @db.Timestamptz(6)
  authentication_method  String
  auth_code_issued_at    DateTime?             @db.Timestamptz(6)
  saml_relay_states      saml_relay_states[]

  @@index([created_at(sort: Desc)])
  @@index([auth_code], map: "idx_auth_code")
  @@index([user_id, authentication_method], map: "idx_user_id_auth_method")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model identities {
  provider_id     String
  user_id         String    @db.Uuid
  identity_data   Json
  provider        String
  last_sign_in_at DateTime? @db.Timestamptz(6)
  created_at      DateTime? @db.Timestamptz(6)
  updated_at      DateTime? @db.Timestamptz(6)
  email           String?   @default(dbgenerated("lower((identity_data ->> 'email'::text))"))
  id              String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  users           users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([provider_id, provider], map: "identities_provider_id_provider_unique")
  @@index([email])
  @@index([user_id])
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model instances {
  id              String    @id @db.Uuid
  uuid            String?   @db.Uuid
  raw_base_config String?
  created_at      DateTime? @db.Timestamptz(6)
  updated_at      DateTime? @db.Timestamptz(6)

  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model mfa_amr_claims {
  session_id            String   @db.Uuid
  created_at            DateTime @db.Timestamptz(6)
  updated_at            DateTime @db.Timestamptz(6)
  authentication_method String
  id                    String   @id(map: "amr_id_pk") @db.Uuid
  sessions              sessions @relation(fields: [session_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([session_id, authentication_method], map: "mfa_amr_claims_session_id_authentication_method_pkey")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model mfa_challenges {
  id                     String      @id @db.Uuid
  factor_id              String      @db.Uuid
  created_at             DateTime    @db.Timestamptz(6)
  verified_at            DateTime?   @db.Timestamptz(6)
  ip_address             String      @db.Inet
  otp_code               String?
  web_authn_session_data Json?
  mfa_factors            mfa_factors @relation(fields: [factor_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "mfa_challenges_auth_factor_id_fkey")

  @@index([created_at(sort: Desc)], map: "mfa_challenge_created_at_idx")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model mfa_factors {
  id                   String           @id @db.Uuid
  user_id              String           @db.Uuid
  friendly_name        String?
  factor_type          factor_type
  status               factor_status
  created_at           DateTime         @db.Timestamptz(6)
  updated_at           DateTime         @db.Timestamptz(6)
  secret               String?
  phone                String?
  last_challenged_at   DateTime?        @unique @db.Timestamptz(6)
  web_authn_credential Json?
  web_authn_aaguid     String?          @db.Uuid
  mfa_challenges       mfa_challenges[]
  users                users            @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, phone], map: "unique_phone_factor_per_user")
  @@index([user_id, created_at], map: "factor_id_created_at_idx")
  @@index([user_id])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model one_time_tokens {
  id         String              @id @db.Uuid
  user_id    String              @db.Uuid
  token_type one_time_token_type
  token_hash String
  relates_to String
  created_at DateTime            @default(now()) @db.Timestamp(6)
  updated_at DateTime            @default(now()) @db.Timestamp(6)
  users      users               @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, token_type])
  @@index([relates_to], map: "one_time_tokens_relates_to_hash_idx", type: Hash)
  @@index([token_hash], map: "one_time_tokens_token_hash_hash_idx", type: Hash)
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model refresh_tokens {
  instance_id String?   @db.Uuid
  id          BigInt    @id @default(autoincrement())
  token       String?   @unique(map: "refresh_tokens_token_unique") @db.VarChar(255)
  user_id     String?   @db.VarChar(255)
  revoked     Boolean?
  created_at  DateTime? @db.Timestamptz(6)
  updated_at  DateTime? @db.Timestamptz(6)
  parent      String?   @db.VarChar(255)
  session_id  String?   @db.Uuid
  sessions    sessions? @relation(fields: [session_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([instance_id])
  @@index([instance_id, user_id])
  @@index([parent])
  @@index([session_id, revoked])
  @@index([updated_at(sort: Desc)])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model saml_providers {
  id                String        @id @db.Uuid
  sso_provider_id   String        @db.Uuid
  entity_id         String        @unique
  metadata_xml      String
  metadata_url      String?
  attribute_mapping Json?
  created_at        DateTime?     @db.Timestamptz(6)
  updated_at        DateTime?     @db.Timestamptz(6)
  name_id_format    String?
  sso_providers     sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([sso_provider_id])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model saml_relay_states {
  id              String        @id @db.Uuid
  sso_provider_id String        @db.Uuid
  request_id      String
  for_email       String?
  redirect_to     String?
  created_at      DateTime?     @db.Timestamptz(6)
  updated_at      DateTime?     @db.Timestamptz(6)
  flow_state_id   String?       @db.Uuid
  flow_state      flow_state?   @relation(fields: [flow_state_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  sso_providers   sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([created_at(sort: Desc)])
  @@index([for_email])
  @@index([sso_provider_id])
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model schema_migrations {
  version String @id @db.VarChar(255)

  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model sessions {
  id             String           @id @db.Uuid
  user_id        String           @db.Uuid
  created_at     DateTime?        @db.Timestamptz(6)
  updated_at     DateTime?        @db.Timestamptz(6)
  factor_id      String?          @db.Uuid
  aal            aal_level?
  not_after      DateTime?        @db.Timestamptz(6)
  refreshed_at   DateTime?        @db.Timestamp(6)
  user_agent     String?
  ip             String?          @db.Inet
  tag            String?
  mfa_amr_claims mfa_amr_claims[]
  refresh_tokens refresh_tokens[]
  users          users            @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([not_after(sort: Desc)])
  @@index([user_id])
  @@index([user_id, created_at], map: "user_id_created_at_idx")
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model sso_domains {
  id              String        @id @db.Uuid
  sso_provider_id String        @db.Uuid
  domain          String
  created_at      DateTime?     @db.Timestamptz(6)
  updated_at      DateTime?     @db.Timestamptz(6)
  sso_providers   sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([sso_provider_id])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model sso_providers {
  id                String              @id @db.Uuid
  resource_id       String?
  created_at        DateTime?           @db.Timestamptz(6)
  updated_at        DateTime?           @db.Timestamptz(6)
  disabled          Boolean?
  saml_providers    saml_providers[]
  saml_relay_states saml_relay_states[]
  sso_domains       sso_domains[]

  @@index([resource_id], map: "sso_providers_resource_id_pattern_idx")
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model users {
  instance_id                                           String?                   @db.Uuid
  id                                                    String                    @id @db.Uuid
  aud                                                   String?                   @db.VarChar(255)
  role                                                  String?                   @db.VarChar(255)
  email                                                 String?                   @db.VarChar(255)
  encrypted_password                                    String?                   @db.VarChar(255)
  email_confirmed_at                                    DateTime?                 @db.Timestamptz(6)
  invited_at                                            DateTime?                 @db.Timestamptz(6)
  confirmation_token                                    String?                   @db.VarChar(255)
  confirmation_sent_at                                  DateTime?                 @db.Timestamptz(6)
  recovery_token                                        String?                   @db.VarChar(255)
  recovery_sent_at                                      DateTime?                 @db.Timestamptz(6)
  email_change_token_new                                String?                   @db.VarChar(255)
  email_change                                          String?                   @db.VarChar(255)
  email_change_sent_at                                  DateTime?                 @db.Timestamptz(6)
  last_sign_in_at                                       DateTime?                 @db.Timestamptz(6)
  raw_app_meta_data                                     Json?
  raw_user_meta_data                                    Json?
  is_super_admin                                        Boolean?
  created_at                                            DateTime?                 @db.Timestamptz(6)
  updated_at                                            DateTime?                 @db.Timestamptz(6)
  phone                                                 String?                   @unique
  phone_confirmed_at                                    DateTime?                 @db.Timestamptz(6)
  phone_change                                          String?                   @default("")
  phone_change_token                                    String?                   @default("") @db.VarChar(255)
  phone_change_sent_at                                  DateTime?                 @db.Timestamptz(6)
  confirmed_at                                          DateTime?                 @default(dbgenerated("LEAST(email_confirmed_at, phone_confirmed_at)")) @db.Timestamptz(6)
  email_change_token_current                            String?                   @default("") @db.VarChar(255)
  email_change_confirm_status                           Int?                      @default(0) @db.SmallInt
  banned_until                                          DateTime?                 @db.Timestamptz(6)
  reauthentication_token                                String?                   @default("") @db.VarChar(255)
  reauthentication_sent_at                              DateTime?                 @db.Timestamptz(6)
  is_sso_user                                           Boolean                   @default(false)
  deleted_at                                            DateTime?                 @db.Timestamptz(6)
  is_anonymous                                          Boolean                   @default(false)
  identities                                            identities[]
  mfa_factors                                           mfa_factors[]
  one_time_tokens                                       one_time_tokens[]
  sessions                                              sessions[]
  leaderboard                                           leaderboard[]
  profiles                                              profiles?
  tournament_participants                               tournament_participants[]
  tournaments                                           tournaments[]
  user_games                                            user_games[]
  weekly_highlights_weekly_highlights_created_byTousers weekly_highlights[]       @relation("weekly_highlights_created_byTousers")
  weekly_highlights_weekly_highlights_user_idTousers    weekly_highlights[]       @relation("weekly_highlights_user_idTousers")

  @@index([instance_id])
  @@index([is_anonymous])
  @@schema("auth")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model clan_join_requests {
  id         String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  clan_id    String    @db.Uuid
  user_id    String    @db.Uuid
  status     String    @default("pending")
  note       String?
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  clans      clans     @relation(fields: [clan_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  profiles   profiles  @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([clan_id, user_id])
  @@index([clan_id], map: "idx_cjr_clan")
  @@index([user_id], map: "idx_cjr_user")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model clan_members {
  clan_id    String    @db.Uuid
  user_id    String    @db.Uuid
  role       String    @default("member")
  joined_at  DateTime  @default(now()) @db.Timestamptz(6)
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  clans      clans     @relation(fields: [clan_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  profiles   profiles  @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([clan_id, user_id])
  @@index([clan_id], map: "idx_clan_members_clan")
  @@index([created_at], map: "idx_clan_members_created_at")
  @@index([user_id], map: "idx_clan_members_user")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model clans {
  id                 String               @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name               String               @unique
  tag                String?
  logo_url           String?
  created_by         String?              @db.Uuid
  created_at         DateTime             @default(now()) @db.Timestamptz(6)
  description        String?
  game_id            BigInt?
  clan_join_requests clan_join_requests[]
  clan_members       clan_members[]
  profiles           profiles?            @relation(fields: [created_by], references: [id], onUpdate: NoAction)
  games              games?               @relation(fields: [game_id], references: [id], onUpdate: NoAction)

  @@index([created_by], map: "idx_clans_created_by")
  @@index([game_id], map: "idx_clans_game")
  @@index([game_id], map: "idx_clans_game_id")
  @@index([tag], map: "idx_clans_tag")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model contacts {
  id         BigInt    @id @default(autoincrement())
  name       String?
  email      String?
  message    String?
  created_at DateTime? @default(now()) @db.Timestamptz(6)

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model follows {
  follower_id                             String   @db.Uuid
  following_id                            String   @db.Uuid
  created_at                              DateTime @default(now()) @db.Timestamptz(6)
  profiles_follows_follower_idToprofiles  profiles @relation("follows_follower_idToprofiles", fields: [follower_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  profiles_follows_following_idToprofiles profiles @relation("follows_following_idToprofiles", fields: [following_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([follower_id, following_id])
  @@index([follower_id], map: "idx_follows_follower")
  @@index([following_id], map: "idx_follows_following")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model games {
  id                BigInt              @id @default(autoincrement())
  slug              String?             @unique
  title             String
  active            Boolean?            @default(true)
  created_at        DateTime?           @default(now()) @db.Timestamptz(6)
  platform          String?
  is_active         Boolean?            @default(true)
  type              String?
  banner_path       String?
  description       String?
  official_url      String?
  banner_url        String?
  website           String?
  youtube           String?
  clans             clans[]
  leaderboard       leaderboard[]
  tournaments       tournaments[]
  user_games        user_games[]
  weekly_highlights weekly_highlights[]

  @@index([title], map: "idx_games_title")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model leaderboard {
  user_id     String    @db.Uuid
  game_id     BigInt
  total_score Int?      @default(0)
  rank_global Int?
  updated_at  DateTime? @default(now()) @db.Timestamptz(6)
  games       games     @relation(fields: [game_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users       users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([user_id, game_id])
  @@index([game_id], map: "idx_leaderboard_game")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model profiles {
  id                                     String               @id @db.Uuid
  username                               String?
  role                                   String?              @default("player")
  score                                  Int?                 @default(0)
  created_at                             DateTime?            @default(now()) @db.Timestamptz(6)
  full_name                              String?
  phone                                  String?
  dob                                    DateTime?            @db.Date
  bio                                    String?
  avatar_url                             String?
  is_admin                               Boolean?             @default(false)
  updated_at                             DateTime?            @default(now()) @db.Timestamptz(6)
  email                                  String?
  clan_join_requests                     clan_join_requests[]
  clan_members                           clan_members[]
  clans                                  clans[]
  follows_follows_follower_idToprofiles  follows[]            @relation("follows_follower_idToprofiles")
  follows_follows_following_idToprofiles follows[]            @relation("follows_following_idToprofiles")
  users                                  users                @relation(fields: [id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model site_settings {
  id          BigInt    @id @default(1)
  brand_name  String?   @default("ArenaFA")
  primary_hex String?   @default("#6366f1")
  accent_hex  String?   @default("#22c55e")
  bg_hex      String?   @default("#0b1020")
  font_family String?   @default("Vazirmatn, system-ui, sans-serif")
  hero_title  String?   @default("هاب فارسی گیمینگ")
  hero_body   String?   @default("تورنمنت‌ها، لیدربوردها و پروموت کریتورهای ایرانی.")
  updated_at  DateTime? @default(now()) @db.Timestamptz(6)

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model tournament_participants {
  id            BigInt      @id @default(autoincrement())
  tournament_id BigInt
  user_id       String      @db.Uuid
  score         Int?        @default(0)
  rank          Int?
  created_at    DateTime?   @default(now()) @db.Timestamptz(6)
  tournaments   tournaments @relation(fields: [tournament_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users         users       @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([tournament_id, user_id])
  @@index([tournament_id], map: "idx_tp_tournament")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model tournaments {
  id                      BigInt                    @id @default(autoincrement())
  title                   String
  game_id                 BigInt
  status                  String                    @default("upcoming")
  start_at                DateTime?                 @db.Timestamptz(6)
  end_at                  DateTime?                 @db.Timestamptz(6)
  description             String?
  created_by              String                    @db.Uuid
  created_at              DateTime?                 @default(now()) @db.Timestamptz(6)
  starts_at               DateTime?                 @db.Timestamptz(6)
  ends_at                 DateTime?                 @db.Timestamptz(6)
  start_date              DateTime?                 @db.Date
  end_date                DateTime?                 @db.Date
  tournament_participants tournament_participants[]
  users                   users                     @relation(fields: [created_by], references: [id], onDelete: Cascade, onUpdate: NoAction)
  games                   games                     @relation(fields: [game_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([game_id], map: "idx_tournaments_game_id")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model user_games {
  user_id    String    @db.Uuid
  game_id    BigInt
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  games      games     @relation(fields: [game_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users      users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([user_id, game_id])
  @@index([game_id], map: "idx_user_games_game")
  @@index([user_id], map: "idx_user_games_user")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model weekly_highlights {
  id                                        BigInt                @id @default(autoincrement())
  week_start                                DateTime              @db.Date
  game_id                                   BigInt?
  type                                      weekly_highlight_type
  user_id                                   String?               @db.Uuid
  reason                                    String?
  created_by                                String?               @db.Uuid
  created_at                                DateTime?             @default(now()) @db.Timestamptz(6)
  users_weekly_highlights_created_byTousers users?                @relation("weekly_highlights_created_byTousers", fields: [created_by], references: [id], onUpdate: NoAction)
  games                                     games?                @relation(fields: [game_id], references: [id], onUpdate: NoAction)
  users_weekly_highlights_user_idTousers    users?                @relation("weekly_highlights_user_idTousers", fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([type, week_start, game_id], map: "uq_weekly_highlights")
  @@unique([week_start, type, game_id])
  @@index([game_id, type], map: "idx_wk_highlights_game_type")
  @@schema("public")
}

enum aal_level {
  aal1
  aal2
  aal3

  @@schema("auth")
}

enum code_challenge_method {
  s256
  plain

  @@schema("auth")
}

enum factor_status {
  unverified
  verified

  @@schema("auth")
}

enum factor_type {
  totp
  webauthn
  phone

  @@schema("auth")
}

enum one_time_token_type {
  confirmation_token
  reauthentication_token
  recovery_token
  email_change_token_new
  email_change_token_current
  phone_change_token

  @@schema("auth")
}

enum clan_role {
  leader
  officer
  member

  @@schema("public")
}

enum tournament_status {
  upcoming
  active
  finished

  @@schema("public")
}

enum weekly_highlight_type {
  user
  youtuber
  gamenet

  @@schema("public")
}
